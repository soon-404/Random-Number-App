{"version":3,"sources":["useLinking.native.tsx"],"names":["isUsingLinking","useLinking","ref","independent","enabled","prefixes","config","getInitialURL","Promise","race","Linking","resolve","setTimeout","subscribe","listener","callback","url","subscription","addEventListener","remove","removeEventListener","getStateFromPath","getStateFromPathDefault","getActionFromState","getActionFromStateDefault","React","useEffect","undefined","Error","Platform","OS","join","trim","enabledRef","useRef","prefixesRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","current","getInitialState","useCallback","state","then","path","thenable","onfulfilled","catch","navigation","rootState","getRootState","routes","some","r","routeNames","includes","name","console","warn","action","dispatch","e","message","resetRoot"],"mappings":"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","sourcesContent":["import {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    prefixes,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          Linking.removeEventListener('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const path = url\n            ? extractPathFromURL(prefixesRef.current, url)\n            : null;\n\n          return path\n            ? getStateFromPathRef.current(path, configRef.current)\n            : undefined;\n        });\n      }\n\n      const path = url ? extractPathFromURL(prefixesRef.current, url) : null;\n\n      state = path\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, []);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n      const navigation = ref.current;\n\n      if (navigation && path) {\n        const state = getStateFromPathRef.current(path, configRef.current);\n\n        if (state) {\n          // Make sure that the routes in the state exist in the root navigator\n          // Otherwise there's an error in the linking configuration\n          const rootState = navigation.getRootState();\n\n          if (\n            state.routes.some((r) => !rootState?.routeNames.includes(r.name))\n          ) {\n            console.warn(\n              \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n            );\n            return;\n          }\n\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${e.message}`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n"]}